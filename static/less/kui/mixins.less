@import "variables.less";

// Mixins.less
// Snippets of reusable CSS to develop faster and keep code readable
// -----------------------------------------------------------------


// UTILITY MIXINS
// --------------------------------------------------

// Sizing shortcuts
// -------------------------
.size(@width: auto, @height: auto) {
    height: @height;
    width: @width;
}

// Position shortcuts
// -------------------------
.position(@position: static, @top: auto, @right: auto, @bottom: auto, @left: auto) {
    position: @position;
    top: @top;
    right: @right;
    bottom: @bottom;
    left: @left;
}

// FONTS
// --------------------------------------------------

#font {
  #family {
    .header() {
      font-family: @headerFontFamily;
    }
    .header-light() {
      font-family: @headerLightFontFamily;
    }
  }
  .header(@size: @baseFontSize, @weight: bold, @lineHeight: @baseLineHeight) {
    #font > #family > .header;
    #font > .shorthand(@size, @weight, @lineHeight);
  }
  .header-light(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
    #font > #family > .header-light;
    #font > .shorthand(@size, @weight, @lineHeight);
  }
}

// Type mixins that use these site variables
#khanType {
  .thinHeader() {
    color: @blueDark;
    display: block;
    font-family: @headerLightFontFamily;
    font-size: 24px;
    font-weight: normal;
  }
  .smallThinHeader() {
    color: #555;
    display: block;
    font-family: @headerLightFontFamily;
    font-size: 18px;
    font-weight: normal;
    line-height: 22px;
  }
  .headerDescription() {
    color: @lightTextColor;
    display: block;
    font-family: @headerLightFontFamily;
    font-size: 13px;
    font-weight: normal;
    line-height:@baseLineHeight;
    margin-top: 2px;
  }


  .domainHeader() {
    font-family: @headerFontFamily;
    #font > .shorthand(11px, normal, 18px);
    text-transform: uppercase;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
  }

  .subjectHeader() {
    font-family: @headerFontFamily;
    #font > .shorthand(52px, normal, 1);
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
  }
  .subjectDescription() {
    font-family: @headerLightFontFamily;
    #font > .shorthand(15px, normal, 22px);
    -webkit-font-smoothing: antialiased;
  }
  .topicDescription() {
    font-family: @headerLightFontFamily;
    #font > .shorthand(15px, normal, 22px);
    -webkit-font-smoothing: antialiased;
  }

  // the topics that appear on subject pages
  .topicHeader() {
    font-family: @headerFontFamily;
    #font > .shorthand(18px, normal, 1.3);
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
  }

  .topicTitle() {
    font-family: @headerFontFamily;
    #font > .shorthand(36px, normal, 1);
  }

  .tutorialDescription() {
    font-family: @headerLightFontFamily;
    #font > .shorthand(14px, normal, 1.5);
  }

  .tutorialTitle() {
    font-family: @headerLightFontFamily;
    #font > .shorthand(18px, normal, 24px);
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
  }

  .tutorialLink() {
    font-family: @headerLightFontFamily;
    #font > .shorthand(13px, normal, 18px);

  }
}

.buttonFillStyle(@baseColor, @textColor) {
    @endColor: darken(@baseColor, 7%);
    border: 1px solid darken(@baseColor, 3%);
    .buttonBackground(@baseColor, @endColor, @textColor, none);
    color: @textColor !important;

    &:focus,
    &:hover {
        border-bottom-color: darken(@baseColor, 15%);
    }
}

// CSS3 PROPERTIES
// --------------------------------------------------

// Border Radius
.border-radiuses (@topleft: 0, @bottomleft: 0, @topright: 0, @bottomright: 0 ) {
  -webkit-border-top-right-radius:    @topright;
  -webkit-border-bottom-right-radius: @bottomright;
  -webkit-border-bottom-left-radius:  @bottomleft;
  -webkit-border-top-left-radius:     @topleft;

  -moz-border-radius-topright:        @topright;
  -moz-border-radius-bottomright:     @bottomright;
  -moz-border-radius-bottomleft:      @bottomleft;
  -moz-border-radius-topleft:         @topleft;

  border-top-right-radius:            @topright;
  border-bottom-right-radius:         @bottomright;
  border-bottom-left-radius:          @bottomleft;
  border-top-left-radius:             @topleft;

  -moz-background-clip:    padding;
  -webkit-background-clip: padding-box;
  background-clip:         padding-box;
}

// Drop shadows

// Shadows for content panes
.content-shadow(@offsetX: 0, @offsetY: 0px, @spread: 8px) {
  box-shadow: @offsetX @offsetY @spread rgba(0, 0, 0, .4);
}

// Shadows for menus
.dropdown-shadow(@offsetX: 0, @offsetY: 5px, @spread: 8px) {
  box-shadow: @offsetX @offsetY @spread rgba(0, 0, 0, .5);
}

// Opacity
.opacity-transition(@rate: 1s, @delay: 0s) {
  transition: opacity @rate ease-in-out @delay;
  // Don't sweat < IE8 alpha because it doesn't have css
  // transitions. Transitions arrive in IE10.
}

// CONTAINER MIXINS
// --------------------------------------------------

// Basic container border.
.basic-border() {
  border: 1px solid @basicBorderColor;
}

// Regular mixin -- available as a css class.
.vertical-shadow {
    .basic-border;
    // Override .basic-border for the bottom:
    border-bottom: 1px solid #aaa;
    box-shadow: 0 1px 3px #ccc;
}

// COMPONENT MIXINS
// --------------------------------------------------

// POPOVER ARROWS
// -------------------------
// For tipsies and popovers
#popoverArrow {
  .top(@arrowWidth: 4px, @color: @menuInactiveTextColor) {
    bottom: 0;
    left: 50%;
    #plainArrow > .top(@arrowWidth, @color);
  }
  .left(@arrowWidth: 4px, @color: @menuInactiveTextColor) {
    top: 50%;
    right: 0;
    #plainArrow > .left(@arrowWidth, @color);
  }
  .bottom(@arrowWidth: 4px, @color: @menuInactiveTextColor) {
    top: 0;
    left: 50%;
    #plainArrow > .bottom(@arrowWidth, @color);
  }
  .right(@arrowWidth: 4px, @color: @menuInactiveTextColor) {
    top: 50%;
    left: 0;
    #plainArrow > .right(@arrowWidth, @color);
  }
}

// Simple arrow with no special attempt to position it.

#plainArrow {
  .top(@arrowWidth: 4px, @color: @menuInactiveTextColor) {
    border-left: @arrowWidth solid transparent;
    border-right: @arrowWidth solid transparent;
    border-top: @arrowWidth solid @color;
  }
  .left(@arrowWidth: 4px, @color: @menuInactiveTextColor) {
    border-top: @arrowWidth solid transparent;
    border-bottom: @arrowWidth solid transparent;
    border-left: @arrowWidth solid @color;
  }
  .bottom(@arrowWidth: 4px, @color: @menuInactiveTextColor) {
    border-left: @arrowWidth solid transparent;
    border-right: @arrowWidth solid transparent;
    border-bottom: @arrowWidth solid @color;
  }
  .right(@arrowWidth: 4px, @color: @menuInactiveTextColor) {
    border-top: @arrowWidth solid transparent;
    border-bottom: @arrowWidth solid transparent;
    border-right: @arrowWidth solid @color;
  }
}

// Mixin for wrapping unbroken text
// ---------------------------------------
.wrap-unbroken-text() {
  white-space: pre-wrap;      /* CSS3 */
  white-space: -moz-pre-wrap; /* Firefox */
  white-space: -pre-wrap;     /* Opera <7 */
  white-space: -o-pre-wrap;   /* Opera 7 */
  word-wrap: break-word;      /* IE */
}

// mixins for dealing with domain colors

#khan {

    .domainTheme(@domain, @prefix){

        .@{domain} {
            color: @white;

            // TODO(athenians): when we use descendents, kill the &s
            &.domain-color,
            .domain-color {
                background: ~"@{@{prefix}DomainColor}" !important;
            }
            &.subject-color,
            .subject-color {
                background: ~"@{@{prefix}SubjectColor}" !important;
            }
            &.topic-color,
            .topic-color {
                background: ~"@{@{prefix}TopicColor}" !important;
            }
            &.tutorial-color,
            .tutorial-color {
                // TODO(alpert): Remove this class
                background: #fff;
            }
            &.accent-button,
            .accent-button {
                @start: ~"@{prefix}DomainColor";
                .buttonFillStyle(@@start, @white);
                font-family: @headerFontFamily;
                -webkit-font-smoothing: antialiased;
            }
        }
    }
}

// Helpers for applying a mixin to to all domains.
// Unfortunately, we cannot pass in a mixin name to another mixin, so to use
// this, override .domainRuleToApply with a single call to the mixin you want
// to apply to all domains. Then call applyToDomains. e.g.
//
//     .domainRuleToApply(@domain, @prefix) {
//         .realMixin(@domain, @prefix);
//     }
//     .applyToDomains;
//

.applyToDomains() {
    .domainRuleToApply(science, science);
    .domainRuleToApply(humanities, humanities);
    .domainRuleToApply(economics-finance-domain, economics);
    .domainRuleToApply(cs, cs);
    .domainRuleToApply(hour-of-code, cs);
    .domainRuleToApply(computing, cs);
    .domainRuleToApply(partner-content, partnerContent);
    .domainRuleToApply(math, math);
    .domainRuleToApply(test-prep, testPrep);
}
